---
# tasks file for ansible-role-postgres

- name: Ensure hosts system-postgres is stopped and disabled
  systemd:
    name: system-postgresql.slice
    state: stopped
    enabled: no
  when: postgres_system_postgres_disable

- name: Ensure PostgreSQL image is pulled
  docker_image:
    name: "{{ postgres_docker_image }}"
    tag: "{{ postgres_docker_image_tag }}"
    source: pull

- name: Ensure data container is created
  docker_container:
    name: "{{ postgres_container_name }}-data"
    image: "{{ postgres_docker_image }}:{{ postgres_docker_image_tag }}"
    container_default_behavior: no_defaults
    pull: "{{ postgres_upgrade | default(false) | bool }}"
    state: present

- name: Ensure PostgreSQL container runs
  docker_container:
    name: "{{ postgres_container_name }}"
    image: "{{ postgres_docker_image }}:{{ postgres_docker_image_tag }}"
    restart_policy: always
    state: started
    restart: yes
    memory: "{{ opstgres_container_memory_limit | default(omit) }}"
    volumes:
      - "{{ postgres_container_name }}-data:/var/lib/postgresql/data"
    volumes_from:
      - "{{ postgres_container_name }}-data"
    ports:
      - "{{ postgres_port }}:5432"
    env:
      POSTGRES_PASSWORD: "{{ postgres_password }}"
      PGDATA: /var/lib/postgresql/data/pgdata
    shm_size: 256M
    container_default_behavior: no_defaults
    networks: "{{ postgres_networks }}"
    networks_cli_compatible: yes
    network_mode: default
  when: postgres_password is defined
  register: postgres_container

- name: Wait until PostgreSQL starts up
  wait_for:
    port: "{{ postgres_port }}"
    delay: 5
  when: postgres_container.changed

- name: Ensure db client packages are installed (Debian/Ubuntu)
  apt:
    name:
      - postgresql
      - libpq-dev
      - python3-psycopg2
    state: present
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

# stop and disable postgresql@11-main.service
#
#

- name: Ensure Server is created and ready to use
  include_tasks: create_databases.yml
  with_items: "{{ postgres_databases }}"
  loop_control:
    loop_var: outer_item
  when: postgres_databases is defined
